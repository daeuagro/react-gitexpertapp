{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OACI,0BAAMC,SAbW,SAAEC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OASd,4CACA,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YA4B/BZ,EAAYe,WAAa,CACrBC,U,OAAWA,EAAUC,KAAKC,Y,2BCrCjBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,qDAEwCC,UAAWH,GAFnD,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAebM,GAfa,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAErC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAMjB,EAAMkB,IAAMR,IAC/B,2BAAKA,KCFIS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAgB,IAAD,EAEflB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAmBzC,OAZAC,qBAAW,WACP1B,EAASC,GAAW0B,MAAM,SAAAC,GAElBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAAEtB,IAGEuB,EDhB0BK,CAAc5B,GAAlCa,EAFsB,EAE3BN,KAAae,EAFc,EAEdA,QAErB,OACO,oCACC,wBAAKJ,UAAU,yCAAf,KAA2DlB,GACzDsB,GAAW,uBAAGJ,UAAU,yCAAb,WAEb,yBAAKA,UAAU,aAEHL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAQnB,EAAIC,IACPD,UEfxBoB,EAAe,WAAO,IAAD,EAEMhD,mBAAS,CAAC,cAFhB,mBAEvBiD,EAFuB,KAEXlD,EAFW,KAI9B,OACI,6BACI,8CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQkD,EAAWtB,KAAK,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACGA,SAAWA,EACX6B,IAAM7B,U,MCb9BgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.e9839d71.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSumbit = ( e ) => {\n        \n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats =>  [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n\n    }\n\n    return (\n        <form onSubmit={ handleSumbit }>\n            \n            <h2>Add category</h2>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange= { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.protoTypes = {\n    PropTypes: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/stickers/search?q=${ encodeURI( category ) }&limit=10&api_key=0V9JlNa4NUMrVNq6aAY6V5LieAtqiJMa`;\n\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id : img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n   return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url } ) => {\n    console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n    <p>{ title }</p>\n            \n        </div>\n    )\n}\n","import React  from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n    \n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n           <>\n            <h3  className=\"card animate__animated animate__flash\">  { category }</h3>\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\n        \n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key = { img.id }\n                                { ...img }\n                            />\n                        ))\n                    }           \n            </div>\n          </>  \n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifts';\n\n\nexport const useFetchGifs = ( category )  => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs( category ).then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n        })\n    }, [ category ]);\n\n\n    return state; // { data: [], loading: true }\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch']);\n\n    return (\n        <div>\n            <h1>Gif Expert App</h1>\n            <hr/>\n\n            <AddCategory setCategories={ setCategories }/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                     <GifGrid \n                        category={ category }\n                        key={ category }\n                     />\n                    ))\n                    \n                }\n            </ol>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}